#
# various settings suggested by other users
#
# derived from the Paradox pair programming screenrc, UChicago 2010
#   ~ yes, we are all total newbs ~
#

startup_message off

#defscrollback 5000
defscrollback 5000

escape ``

# this hard status was stolen from the net, all credit goes to its originator
hardstatus             alwayslastline
#hardstatus string '%{= mK}%-Lw%{= KW}%50>%n%f* %t%{= mK}%+Lw%< %{= kG}%-=%D %d %M %Y %c:%s%{-}'
hardstatus string '%{= kG}[ %{G}%H %{g}][%= %{= kw}%?%-Lw%?%{r}(%{W}%n*%f%t%?(%u)%?%{r})%{w}%?%+Lw%?%?%= %{g}][%{B} %d/%m %{W}%c %{g}]'

# A hint for using multiuser mode:  make sure that both parties have identically
# sized terminals, otherwise there could be graphical mismatches and undrawn text
# for one party :(  .

# turn multiuser mode on so others can connect.
multiuser on

# add the specified user to this screen session so that they can connect.
# the initiating user is allowed automatically, but add both so either can
# run this script without modification.

#acladd gen
acladd oberlin
acladd stefie10

# Starts a new screen with title " MAKE"
# this is basically equivalent to pressing the following from within screen:
# `c (starts a new window)
# `:title " MAKE" (sets the title to " MAKE")
#screen -t " MAKE"

#stuff "unset STY\n"
#stuff "screen\n"

screen -t " roscore"
stuff "source setup.sh\n"
stuff "roscore\n"
stuff ""

screen -t " flight"
stuff "source setup.sh\n"
stuff "cd $(rospack find pidrone_pkg)/scripts\n"
stuff "python state_controller.py" # starting state controller automatically is unsafe

screen -t " flight_controller"
stuff "source setup.sh\n"
stuff "cd $(rospack find pidrone_pkg)/scripts/\n"
stuff "python flight_controller_pub.py\n"

screen -t " aarons_position_controller"
stuff "source setup.sh\n"
stuff "cd $(rospack find pidrone_pkg)/scripts/\n"
stuff "python aarons_position_controller.py\n"

screen -t " aarons_terminal_mode_selector"
stuff "source setup.sh\n"
stuff "cd $(rospack find pidrone_pkg)/scripts/\n"
stuff "python aarons_terminal_mode_selector.py\n"

screen -t " fc and mocap sim"
stuff "source setup.sh\n"
stuff "cd $(rospack find pidrone_pkg)/scripts/\n"
stuff "python fc_and_mocap_sim.py\n"

screen -t " free"
stuff "source setup.sh\n"
stuff "cd $(rospack find pidrone_pkg)/scripts/\n"

screen -t " rosbridge"
stuff "source setup.sh\n"
stuff "sleep 10s && roslaunch rosbridge_server rosbridge_websocket.launch\n"

screen -t " web_video_server"
stuff "source setup.sh\n"
stuff " rosrun web_video_server web_video_server"

screen -t " vim"
stuff "source setup.sh\n"
stuff "cd $(rospack find pidrone_pkg)/scripts\n"
stuff "vim -p flow_pub_transform.py state_controller.py pid_class.py\n"

screen -t " emacs"
stuff "source setup.sh\n"
stuff "cd $(rospack find pidrone_pkg)/scripts\n"
stuff "emacs\n"
